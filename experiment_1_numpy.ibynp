{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Welcome To Colaboratory",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/19pa1a0290/AI-lab/blob/master/experiment_1_numpy.ibynp\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZJ9PeU4Tyetx",
        "colab_type": "text"
      },
      "source": [
        "Experiment:1\n",
        "1.different ways to create a bumpy arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sA76wCnyypHD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "fa7af056-df88-4428-aa7f-54a51737fb2a"
      },
      "source": [
        "import numpy as np\n",
        "p=np.array([[1,2,3],[5,6,4]])\n",
        "print(p)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[1 2 3]\n",
            " [5 6 4]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "er81vbkx0DoQ",
        "colab_type": "text"
      },
      "source": [
        "1.2:add,remove,modify array elements \n",
        "Add:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RQx9Op070KoB",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4e3367c9-2829-4ab4-a12f-05ebabc6c20e"
      },
      "source": [
        "a=np.array([3,7,9])\n",
        "b=np.append(a,[4,2,6])\n",
        "print(b)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[3 7 9 4 2 6]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eIz9-tvb0_d5",
        "colab_type": "text"
      },
      "source": [
        "remove:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Waerp7AY1DEh",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "fccc3a3e-c76c-4a52-9aba-f967bef6d965"
      },
      "source": [
        "c=np.delete(a,2)\n",
        "print(c)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[3 7]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "t34tAIl-1X5O",
        "colab_type": "text"
      },
      "source": [
        "Modify:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BIloNx3p1cP1",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "0e9ff584-4081-4ce5-d3db-f817f02f1390"
      },
      "source": [
        "c[c>5]=-2\n",
        "print(c)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[ 3 -1]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "U4rWFz6G15ld",
        "colab_type": "text"
      },
      "source": [
        "1.3:Arthematic operations on numpy array"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RKys7_142DLH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "612f35a9-f1b9-4512-f508-204abf7ab680"
      },
      "source": [
        "import numpy as np\n",
        "a=([9,7,2])\n",
        "b=([4,5,6])\n",
        "num_sum=np.add(a,b)\n",
        "num_diff=np.subtract(a,b)\n",
        "num_quo=np.divide(a,b)\n",
        "num_mod=np.mod(a,b)\n",
        "num_pow=np.power(a,b)\n",
        "print(num_sum)\n",
        "print(num_diff)\n",
        "print(num_quo)\n",
        "print(num_mod)\n",
        "print(num_pow)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[13 12  8]\n",
            "[ 5  2 -4]\n",
            "[2.25       1.4        0.33333333]\n",
            "[1 2 2]\n",
            "[ 6561 16807    64]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QvIKTel9388u",
        "colab_type": "text"
      },
      "source": [
        "1.4:slicing and iterating of numpy arrays \n",
        "Slicing:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "72ZWwuXP4FMI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "fe91cf53-d5c4-4e92-e52b-dd754630ae60"
      },
      "source": [
        "import numpy as np\n",
        "arr=np.array([1,2,3,4,5,6])\n",
        "print (arr[1:7])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[2 3 4 5 6]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sJlIAjiK4jeo",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "itYOmxXK4kip",
        "colab_type": "text"
      },
      "source": [
        "Iterating:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pF6yurEQ4n3A",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "0b9f69e2-1436-445c-f93a-82e9e88dd1a2"
      },
      "source": [
        "for x in arr:\n",
        "    print(x)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d7YEeBwb4wuT",
        "colab_type": "text"
      },
      "source": [
        "1.5:matrix operations on numpy arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Jeg-zu9644Hz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "d109fb69-8352-4069-e7f7-666655cd9792"
      },
      "source": [
        "import numpy as np\n",
        "a=np.array([[1,2],[5,7]])\n",
        "b=np.array([[3,4],[6,9]])\n",
        "print(np.add(a,b))\n",
        "print(np.subtract(a,b))\n",
        "print(np.divide(a,b))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[ 4  6]\n",
            " [11 16]]\n",
            "[[-2 -2]\n",
            " [-1 -2]]\n",
            "[[0.33333333 0.5       ]\n",
            " [0.83333333 0.77777778]]\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}